A - Added files
D - Deleted files
M - Modified files
?? - Untracked files

внесли правку в проэкт=>
ЭТАПА ВЫПОЛНЕНИЯ КОММИТА
(1) добавить в очередь на коммит (git add название_файла)-проиндексировать
(2) непосредственно выполнить коммит (git commit -m 'комментарий')
(3) запушить 

после 
git log журнал коммитов с информацией


git remote add origin ссылка
(привязка локального репо к репо на GH)

git push
(отправить изменения на GH)


			22.09

ОШИБКИ

(1) Попытка заново инициализировать реп (.git)
ВЫВОД: git init (делается один раз в САМОМ начале)

(2) ПЕРЕПРИВЯЗКА НОВОГО РЕП НА GH к ЛОКАЛЬНОМУ
 2.1 (необх. удалить старую привязку) git remote rm origin
 2.2 (и уже здесь делаете новую привязку) git remote add origin ссылка_на_новый_реп

(3) ПЕРЕИМЕНОВАНИЕ ВЕТОК
  master -> main
  git push -u origin main
ВЫВОД: надо внимательно смотреть что ВЫ делаете

(4) ВСЕ ИЗМЕНЕНИЯ В РЕПО ДЕЛАЮТСЯ ЛОКАЛЬНО
	а затем эти правки ВЫ уже отправляете (синхронизируете или "пушите") на GH


ПОМЕНЯТЬ ПРИВЯЗКУ
git remote rm origin (удалить старую)
git remote add origin ссылка (добавить новую)

git rm -r каталог
rm -rf .git

ОБЛАСТИ

(1) раб/каталог (проекта)
(2) индекс (очередь на коммит)
(3) последний и др. коммиты


ЧТО С ЧЕМ СРАВНИТЬ?

(1) раб/каталог с индексом (git diff)
(2) индекс с последним коммитом (git diff --staged)
(3) раб/каталог с последним индексом (git diff HEAD)
git diff HEAD~2 HEAD~ -- style.css




КАК ЧАСТО НАДО ДЕЛАТЬ КОММИТ?

(1) В конце рабочего дня (не рекомендуется)
(2) После правки каждого файла (не рекомендуется)
(3) Рекомендуемый подход:
	- COMMIT EARLY. COMMIT OFTEN
	- завершенность по функциональным блокам
	- атомарность (небольшой объем правок)
	

СИСТЕМА КОММЕНТИРОВАНИЯ (КАК ВАРИАНТ)
	*** характер_правки(модуль): описание ***
	
fix(payments): исправил повторные оплаты
feat(integrations:slack): добавил интеграцию со Слаком
style(main_page): поменял корпоративный стиль
docs(..
test(
build



КАК ДЕЛАТЬ ПРОЕКТ, ИСПОЛЬЗУЯ GIT
(1) внести изменения в проект (какие необх. по тек. задаче)
(2) git diff (проверить их)
(3) проиндексировать (добавить в очередь на коммит)
(4) выполнить сохранение (фиксицию, "закоммитить")




git add index.html
git commit -m 'комментарий'
----

git commit -am "комментарий"
git commit -h


ПОДХОДЫ К ВЕТВЛЕНИЕ В GIT

GIT FLOW
(1) master / main / stable (главная ветка) - logn-term
(2) develop / current (тестовая ветка) - long-term
(3) payments, issue001, ticket391, login, feature/catalog (временные ветки) - short-term


GITHUB FLOW
(1) master / main
(2) short-terms branches


:wq выйти и сохранить
:q! просто выйти из vim редакторе

(cd ../../../..
ls -ls .git
ls -lah .git
rm -rf .git
)  что это???????????




