	1. Зачем нужен GIT и какие задачи решают с его помощью?
Git — абсолютный лидер по популярности среди современных систем управления версиями. 
Это развитый проект с активной поддержкой и открытым исходным кодом. Система Git 
была разработана в 2005 году Линусом Торвальдсом — создателем ядра операционной 
системы Linux. Git применяется для управления версиями в рамках колоссального 
количества проектов по разработке ПО, как коммерческих, так и с открытым исходным 
кодом. Система используется множеством разработчиков ПО.
С помощью Git-a мы можем откатить свой проект до более старой версии, сравнивать, 
нализировать или сливать свои изменения в репозиторий.
		2. Что такое репозиторий GIT и где он находится?
Репозиторием называют хранилище нашего кода и историю его изменений. Git работает
локально и все наши репозитории хранятся в определенных папках на жестком диске.
		3. Для чего используется файл .gitignore?
Файл.gitignore необходим для скрытия файлов и директорий от Git. Чаще всего, 
исключают конфигурационные файлы (особенно с паролями), временные файлы и директории.
Файл .gitignore используется для того, чтобы определить, какие файлы и папки не нужно
добавлять в git репозиторий.
		4. Что такое "коммит"?
По-английски commit значит «фиксировать». Git-коммит — это операция, которая берет 
все подготовленные изменения и отправляет их в репозиторий как единое целое.
Коммиты разбивают процесс разработки, состоящий из большого количества правок, на 
отдельные шаги. То есть коммит — это некое логически завершенное изменение внутри 
проекта и понятная (в том числе и другим разработчикам) точка, к которой можно 
вернуться, если возникнут какие-то проблемы.
		5. Настройка аккаунта локального пользователя.
git config --global user.name "Name Surname" (имя и фамилию подставляем свои).
git config --global user.email "email@gmail.com" (email подставляем тот, на который 
зарегистрировали аккаунт на гитхабе).
		6. Создание репозитория.
Для создания нового репозитория используется команда git init. Команду git init 
выполняют только один раз для первоначальной настройки нового репозитория.
		7. Добавление файлов в индекс и выполнение коммита.
git add . или git add "название файла"
git commit -u origin master
		8. Просмотр журнала коммитов.
git log